# Generated by Django 4.1.5 on 2025-04-23 04:13

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import prospectivity.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='geospatialDatasets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataset_names', models.TextField(unique=True)),
                ('dataset_types', models.CharField(choices=[('Raster', 'Raster'), ('Vector', 'Vector'), ('Tabular', 'Tabular'), ('metadata', 'Metadata'), ('tiff', 'Tiff'), ('shapefiles', 'Shapefiles'), ('csv', 'Csv'), ('xml', 'Xml'), ('json', 'Json')], max_length=50)),
                ('file', models.FileField(upload_to=prospectivity.models.dataset_upload_path)),
                ('crs', models.CharField(choices=[('GCS', 'Gcs'), ('PCS', 'Pcs')], max_length=50, verbose_name='Coordinate reference system')),
                ('band_info', models.CharField(choices=[('RED', 'Red'), ('GREEN', 'Green'), ('BLUE', 'Blue')], max_length=20, verbose_name='Band')),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['updated_on'],
            },
        ),
        migrations.CreateModel(
            name='prospectivityProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('project_code', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True)),
                ('project_status', models.CharField(choices=[('Planned', 'Planned'), ('Active', 'Active'), ('Completed', 'Completed'), ('Archived', 'Archived')], default='planned', max_length=50)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('country', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=100)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('boundary', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('target_minerals', models.CharField(help_text='Comma-separated list', max_length=255)),
                ('mineral_type', models.CharField(blank=True, max_length=255)),
                ('historical_production', models.FloatField(blank=True, help_text='in tonnes', null=True)),
                ('user_updated', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='updated by user')),
            ],
            options={
                'db_table': 'custom_table_name',
                'ordering': ['-created_date'],
                'unique_together': {('name', 'project_code', 'description', 'project_status')},
            },
        ),
        migrations.CreateModel(
            name='MLmodelRun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='predictive models')),
                ('algorithms_used', models.CharField(choices=[('SVM', 'support vector machine'), ('RF', 'Random Forest'), ('XGBOost', 'gradient boost'), ('CNN', 'Convolutional Neural Network')], default='custom', max_length=100)),
                ('parameters', models.JSONField(blank=True, null=True, verbose_name='configuration parameters')),
                ('performance_metrics', models.JSONField(blank=True, null=True, verbose_name='accuracy, F1 score, Precision, Recall')),
                ('review_result', models.FileField(blank=True, null=True, upload_to=prospectivity.models.dataset_upload_path)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Running', 'Running'), ('Achieved', 'Achieved'), ('Failed', 'Failed')], default='pending', max_length=50)),
                ('predicted_at', models.DateTimeField(auto_now=True)),
                ('input_data', models.ManyToManyField(to='prospectivity.geospatialdatasets', verbose_name='input data')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='prospectivity.prospectivityproject', verbose_name='ML models')),
            ],
        ),
        migrations.AddField(
            model_name='geospatialdatasets',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='prospectivity.prospectivityproject', verbose_name='Prospectivity Project'),
        ),
        migrations.AlterUniqueTogether(
            name='geospatialdatasets',
            unique_together={('project', 'dataset_names', 'dataset_types', 'file')},
        ),
    ]
